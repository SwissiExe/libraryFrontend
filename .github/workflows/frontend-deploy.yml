name: ci

on:
  push:
    branches:
      - 'main'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up QEMU (optional, if needed)
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx (optional, if needed)
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: swissiexe/library_management:latest
          file: ./docker/Dockerfile

  build_and_publish:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container registry
        uses: docker/login-action@v1
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          registry: ghcr.io
          username: $GITHUB_USER
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker Build
        run: docker buildx build ./docker/Dockerfile

      - name: Docker Push
        run: docker push  ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

  pull-from-ghcr-and-push-to-ecr:
    needs: build_and_publish
    permissions:
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to GitHub Container registry
        uses: docker/login-action@v1
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          registry: ghcr.io
          username: $GITHUB_USER
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image from GHCR
        run: docker pull ghcr.io/swissiexe/libraryfrontend:latest  # Adjust organization and image name

      - name: Tag the image for ECR
        run: docker tag ghcr.io/SwissiExe/libraryFrontend:latest ${{ secrets.AWS_ACC_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/swissiexe/libraryfrontend:latest

      - name: Push the image to ECR
        run: docker push ${{ secrets.AWS_ACC_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/swissiexe/libraryfrontend:latest
